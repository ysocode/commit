#!/usr/bin/env php
<?php

/**
 * YSOCode Commit CLI
 *
 * A tool to generate conventional commits using AI based on Git staged changes.
 * This CLI analyzes your staged changes and uses artificial intelligence to
 * suggest meaningful commit messages following the Conventional Commits specification.
 *
 * @author Yuri Oliveira <yuri.oliveira@ysocode.com>
 * @license MIT
 *
 * @link https://github.com/ysocode/commit
 *
 * @copyright 2025 YSOCode
 */
$globalInstallPath = __DIR__.'/../../../autoload.php';
$localInstallPath = __DIR__.'/../vendor/autoload.php';

require_once file_exists($globalInstallPath) ? $globalInstallPath : $localInstallPath;

use Symfony\Component\Console\Application;
use YSOCode\Commit\Application\Actions\CommitGitStagedChanges;
use YSOCode\Commit\Application\Actions\FetchEnabledAiProvidersInUserConfiguration;
use YSOCode\Commit\Application\Actions\FetchStagedGitChanges;
use YSOCode\Commit\Application\Actions\GetDefaultAiProviderFromUserConfiguration;
use YSOCode\Commit\Application\Actions\GetDefaultLanguageFromUserConfiguration;
use YSOCode\Commit\Application\Actions\SetDefaultAiProviderInUserConfiguration;
use YSOCode\Commit\Application\Console\Commands\Factories\GenerateCommitMessageFactory;
use YSOCode\Commit\Application\Console\Commands\GenerateConventionalCommitMessage;
use YSOCode\Commit\Application\Console\Commands\InitializeConfiguration;
use YSOCode\Commit\Application\Console\Commands\ManageDefaultAiProvider;
use YSOCode\Commit\Foundation\Support\Configuration;
use YSOCode\Commit\Foundation\Support\UserConfiguration;

$userConfiguration = new UserConfiguration(
    new Configuration(
        basePath('config')
    )
);

$app = new Application('YSO Code', '3.0.0');
$app->add(
    new GenerateConventionalCommitMessage(
        new GetDefaultAiProviderFromUserConfiguration($userConfiguration),
        new GetDefaultLanguageFromUserConfiguration($userConfiguration),
        new FetchStagedGitChanges,
        new GenerateCommitMessageFactory($userConfiguration),
        new CommitGitStagedChanges
    )
);

$app->add(
    new InitializeConfiguration($userConfiguration)
);

$app->add(
    new ManageDefaultAiProvider(
        new GetDefaultAiProviderFromUserConfiguration($userConfiguration),
        new SetDefaultAiProviderInUserConfiguration($userConfiguration),
        new FetchEnabledAiProvidersInUserConfiguration($userConfiguration)
    )
);

$app->run();
